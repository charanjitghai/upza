swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /actions/process/doc:
    post:
      summary: "Process new doc"
      description: ""
      operationId: "processDoc"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Doc object that needs to be processed"
        required: true
        schema:
          $ref: "#/definitions/ProcessDocRequest"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
  /actions/process/msg:
    post:
      summary: "Process new msg"
      description: ""
      operationId: "processMsg"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Doc object that needs to be processed"
        required: true
        schema:
          $ref: "#/definitions/ProcessMsgRequest"
      responses:
        "200":
          description: "successful operation"
  /actions/rank:
    post:
      summary: "Rank Entities"
      description: ""
      operationId: "rankEntities"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Rank arguments"
        required: true
        schema:
          $ref: "#/definitions/RankEntitiesRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RankEntitiesResponse"
              
definitions:
  ProcessDocRequest:
    type: "object"
    properties:
      url:
        type: "string"
  ProcessMsgRequest:
    type: "object"
    properties:
      msgId:
        type: "string"
      msgText:
        type: "string"
  RankEntitiesRequest:
    type: "object"
    properties:
      keywords:
        type: "array"
        items:
          type: "string"
      limit:
        type: "integer"
  RankEntitiesResponse:
    type: "object"
    properties:
      entities:
        type: "array"
        items: 
          $ref: "#/definitions/Entity"
  Entity:
    type: "object"
    properties:
      entityId:
        type: "string"
      score:
        type: "integer"
  